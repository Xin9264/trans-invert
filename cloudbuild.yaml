substitutions:
  _REGION: 'asia-northeast1'
  _AR_HOST: 'asia-northeast1-docker.pkg.dev'
  _REPO: 'trans-invert'
  _BACKEND_IMAGE: 'backend'
  _FRONTEND_IMAGE: 'frontend'

steps:
  # Build frontend
  - name: 'node:18'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd frontend
        echo "📦 Installing frontend dependencies..."
        npm ci --only=production
        echo "🔨 Building frontend..."
        npm run build
        echo "✅ Frontend build completed"
        ls -la dist/

  # Debug: check context + .dockerignore
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "🔍 Checking build context..."
        ls -la .
        echo "📁 Backend directory:"
        ls -la backend/ || true
        echo "📄 .dockerignore:"
        cat .dockerignore || echo "(no .dockerignore)"

  # (可选) 将前端构建产物复制到后端静态目录
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - '-c'
      - |
        echo "📂 Copy frontend dist into backend static folder..."
        rm -rf backend/static && mkdir -p backend/static
        cp -r frontend/dist/* backend/static/ || echo "⚠️ no dist found"
        echo "✅ Frontend files copied to backend/static"
        ls -la backend/static/

  # Build backend image (use root as context with optimized Dockerfile)
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t','$_AR_HOST/$PROJECT_ID/$_REPO/$_BACKEND_IMAGE:$COMMIT_SHA',
        '--no-cache',
        '.'
      ]
    env:
      - 'DOCKER_BUILDKIT=1'

  # Push image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push','$_AR_HOST/$PROJECT_ID/$_REPO/$_BACKEND_IMAGE:$COMMIT_SHA']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run','deploy','trans-invert',
        '--image','$_AR_HOST/$PROJECT_ID/$_REPO/$_BACKEND_IMAGE:$COMMIT_SHA',
        '--region','$_REGION',
        '--allow-unauthenticated',
        '--port','8000',
        '--memory','1Gi',
        '--cpu','1',
        '--min-instances','0',
        '--max-instances','10',
        '--concurrency','80',
        '--timeout','3600',
        '--execution-environment','gen2',
        '--set-env-vars','APP_ENV=production,APP_HOST=0.0.0.0,APP_PORT=8000,DEBUG=false',
        '--update-env-vars','ALLOWED_ORIGINS=*'
      ]

images:
  - '$_AR_HOST/$PROJECT_ID/$_REPO/$_BACKEND_IMAGE:$COMMIT_SHA'